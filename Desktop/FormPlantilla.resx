<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wuX6L+hb4hRjyZDpAAAAAElFTkSuQmCC
</value>
  </data>
</root>